#Task 1
#A Person class

#Make a class called Person. 
#Make the __init__() method take firstname, lastname, and age as parameters and add them as attributes. 
#Make another method called talk() which makes prints a greeting from the person containing, for example like this: “Hello, my name is Carl Johnson and I’m 26 years old”.

class Person:
    def __init__(self, firstname, lastname, age):
        self.firstname = firstname
        self.lastname = lastname
        self.age = age
        
    def talk(self):
        print(f"Hello, my name is {self.firstname} {self.lastname} and I'm {self.age} years old.")

person = Person("Carl", "Johnson", 26)
person.talk() 

#при виклику змінної person з методом talk, виводить принт 
#Hello, my name is Carl Johnson and I'm 26 years old.


#Task 2
#Doggy age
#Create a class Dog with class attribute `age_factor` equals to 7. 
#Make __init__() which takes values for a dog’s age.
#Then create a method `human_age` which returns the dog’s age in human equivalent.

class Dog:
    age_factor = 7
    
    def __init__(self, age):
        self.age = age
        
    def human_age(self):
        return self.age * Dog.age_factor

dog = Dog(5)
print(dog.human_age())
#35


#Task3
#TV controller
#Create a simple prototype of a TV controller in Python.
#It’ll use the following commands:

#first_channel() - turns on the first channel from the list.
#last_channel() - turns on the last channel from the list.
#turn_channel(N) - turns on the N channel. Pay attention that the channel numbers start from 1, not from 0.
#next_channel() - turns on the next channel. If the current channel is the last one, turns on the first channel.
#previous_channel() - turns on the previous channel. If the current channel is the first one, turns on the last channel.
#current_channel() - returns the name of the current channel.
#is_exist(N/'name') - gets 1 argument - the number N or the string 'name' and returns "Yes", if the channel N or 'name' exists in the list, or "No" - in the other case.
 
#The default channel turned on before all commands is №1.

#Your task is to create the TVController class and methods described above.



CHANNELS = ["BBC", "Discovery", "TV1000"]

class TVController:
    def __init__(self, channels):
        self.channels = channels
        self.current_channel_index = 0
        
    def first_channel(self):
        self.current_channel_index = 0
        return self.current_channel()
    
    def last_channel(self):
        self.current_channel_index = len(self.channels) - 1
        return self.current_channel()
    
    def turn_channel(self, n):
        self.current_channel_index = n - 1
        return self.current_channel()
    
    def next_channel(self):
        self.current_channel_index = (self.current_channel_index + 1) % len(self.channels)
        return self.current_channel()
    
    def previous_channel(self):
        self.current_channel_index = (self.current_channel_index - 1) % len(self.channels)
        return self.current_channel()
    
    def current_channel(self):
        return self.channels[self.current_channel_index]
    
    def is_exist(self, channel):
        if type(channel) == int:
            return "Yes" if 1 <= channel <= len(self.channels) else "No"
        else:
            return "Yes" if channel in self.channels else "No"

controller = TVController(CHANNELS)
print(controller.first_channel()) #виводить BBC
print(controller.last_channel()) #виводить TV1000
print(controller.turn_channel(1)) #виводить BBC
print(controller.next_channel()) #виводить Discovery
print(controller.previous_channel()) #виводить BBC
print(controller.current_channel()) #виводить BBC
print(controller.is_exist(4)) #виводить No
print(controller.is_exist("BBC")) #виводить Yes
